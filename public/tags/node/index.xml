<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>node on minpeter DEV blog</title>
    <link>http://minpeter.github.io/tags/node/</link>
    <description>Recent content in node on minpeter DEV blog</description>
    <image>
      <url>http://minpeter.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://minpeter.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 01 Oct 2021 11:24:00 +0900</lastBuildDate><atom:link href="http://minpeter.github.io/tags/node/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>⛷️ apt vs dnf, snap vs flatpak</title>
      <link>http://minpeter.github.io/posts/linux/2021-10-09-apt-vs-dnf-snap-vs-flatpak/</link>
      <pubDate>Fri, 01 Oct 2021 11:24:00 +0900</pubDate>
      
      <guid>http://minpeter.github.io/posts/linux/2021-10-09-apt-vs-dnf-snap-vs-flatpak/</guid>
      <description>리눅스를 처음 접하면 기장 반가운건 다양한 것들중 단연 패키지관리자일 것이다.
만약 windows에 winget 패키지 관리자가 나오기 전이나, 또는 아직까지도 winget에 대해 들어보자도 못한 개발자에게는 더욱 반가웠을 것이다.
windows의 새로운 패키지 관리자인 winget에 대해선 다음에 다뤄보도록 하겠다.
우리가 보통 (그러니까 windows에서) 프로그램을 설치할때는 꽤 복잡하다.
 해당 프로그램을 구글에 검색 프로그램의 exe 파일이나 msix 파일 다운 다운 받은 파일을 누르고 관리자권한 부여 다음 버튼 연타 끝  이렇듯 절대 쉬운 과정이 아니며 이런 과정 중간에 설치한 exe, msi, msix 파일이 남게 된다.</description>
    </item>
    
    <item>
      <title>🦎 nvm을 이용한 node버전관리 (TIL)</title>
      <link>http://minpeter.github.io/posts/til/2021-10-01-nvm%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-node%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 01 Oct 2021 11:24:00 +0900</pubDate>
      
      <guid>http://minpeter.github.io/posts/til/2021-10-01-nvm%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-node%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/</guid>
      <description>난 솔직히 자가진단이 싫다.
최근 아이폰 7으로 바꾸기 전까지는 앱이 열리는데까지 너무 오래걸렸고,
짜피 의식의 흐름대로 아니오를 3번 입력하는 동작은 정말 비효율적으로 느껴진다.
하지만 교육청에선 필요하다고 생각하는 모양이다.
뭐 과거의 나는 교육청에서 뭐라고 생각하든 신경쓰지않았고,
python으로 자가진단 서버에 리퀘를 보내 자가진단을 자동으로 수행해주는 프로그램을 만들어서 사용했었다.
선생님한테 적발되기 전까진,
그 이후로 딱히 자가진단 자동화에 관심을 두지 않고 그냥 주어진대로 하면서 살아갔다.
헌데 어느날 깃허브에서 다음 레포를 발견했다.
hcs.js라는 노드 라이브러리 프로젝트인데 최근 추가된 보안키패드에 완벽대응한다!</description>
    </item>
    
  </channel>
</rss>
